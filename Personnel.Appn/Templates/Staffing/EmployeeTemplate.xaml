<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:localConverters="clr-namespace:Personnel.Appn.Converters"
                    xmlns:helperConverters="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
                    xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
                    xmlns:iw="clr-namespace:Personnel.Appn.Controls"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:add="clr-namespace:Personnel.Appn.Additional"
                    xmlns:staffing="clr-namespace:Personnel.Application.ViewModels.Staffing;assembly=Personnel.Application.ViewModels"
                    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ss="clr-namespace:Personnel.Application.ViewModels.StaffingService;assembly=Personnel.Application.ViewModels">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Personnel.Appn;component/Controls/IconViewer/IconViewer.xaml"/>
        <ResourceDictionary Source="/Personnel.Appn;component/Styles/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <svgc:SvgViewbox x:Key="employeeStaffingPlusContent" Height="20" Width="20" Stretch="Uniform" x:Shared="False"
                     Source="/Personnel.Application.Icons;component/SVG/appbar.user.add.svg"
                     IsHitTestVisible="False"/>

    <svgc:SvgViewbox x:Key="employeeNoImageContent" Height="48" Width="48" Stretch="Uniform" x:Shared="False"
                     Source="/Personnel.Application.Icons;component/SVG/appbar.user.svg"
                     IsHitTestVisible="False"/>

    <BooleanToVisibilityConverter x:Key="employeeBooleanToVisibilityConverter"/>
    <helperConverters:ReverseBooleanToVisibilityConverter x:Key="employeeReverseBooleanToVisibilityConverter"/>
    <helperConverters:IsNotEqualVisibilityConverter x:Key="employeeIsNotEqualVisibilityConverter"/>
    <helperConverters:IsNotEqualsConverter x:Key="IsNotEqualsConverter"/>
    <helperConverters:IsEqualVisibilityConverter x:Key="employeeIsEqualVisibilityConverter"/>
    <localConverters:StaffingPictureToImageSourceConverter x:Key="employeeImagePathToImageSourceConverter"/>
    <helperConverters:ApplyConverter x:Key="employeeApplyConverter"/>

    <!-- Employee -->
    <DataTemplate x:Key="EmployeeTemplate" DataType="{x:Type staffing:EmployeeViewModel}">
        <DataTemplate.Resources>
            <sys:Int64 x:Key="width">48</sys:Int64>
            <sys:Int64 x:Key="height">48</sys:Int64>
        </DataTemplate.Resources>
        <md:Card Margin="4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" Width="{StaticResource width}" Height="{StaticResource height}" Grid.RowSpan="2"
                       Visibility="{Binding Photos[Avatar64], Converter={StaticResource employeeIsNotEqualVisibilityConverter}, ConverterParameter={x:Null}}"
                       Source="{Binding Photos[Avatar64].File.Link, Converter={StaticResource employeeImagePathToImageSourceConverter}}"/>

                <ContentPresenter Grid.Column="0" Width="{StaticResource width}" Height="{StaticResource height}" Grid.RowSpan="2"
                                  Visibility="{Binding Photos[Avatar64], Converter={StaticResource employeeIsEqualVisibilityConverter}}"
                                  Content="{StaticResource employeeNoImageContent}"/>

                <TextBlock Grid.Column="1" Grid.Row="0" Margin="8,4" TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"
                           VerticalAlignment="Center" x:Name="PART_FIO">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1} {2}">
                            <Binding Path="Employee.Surname"/>
                            <Binding Path="Employee.Name"/>
                            <Binding Path="Employee.Patronymic"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <WrapPanel Grid.Column="1" Grid.Row="1" Margin="4">
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="FontSize" Value="{Binding ElementName=PART_FIO, Path=FontSize, Converter={StaticResource employeeApplyConverter}, ConverterParameter=-4}"/>
                            <Setter Property="Margin" Value="4,0"/>
                        </Style>
                    </WrapPanel.Resources>
                    <TextBlock Text="{Binding Department.Name}" x:Name="PART_Department"/>
                    <TextBlock Text="/" x:Name="PART_DepartmentDelimiter"/>
                    <TextBlock Text="{Binding Employee.Stuffing.Appoint}" x:Name="PART_Appoint"/>
                </WrapPanel>
            </Grid>
        </md:Card>
    </DataTemplate>

    <DataTemplate x:Key="EmployeeTemplateTopImage" DataType="{x:Type staffing:EmployeeViewModel}">
        <md:Card Margin="4" Width="92" Height="92" ToolTipService.IsEnabled="True" Padding="4">
            <md:Card.ToolTip>
                <TextBlock>
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1} {2}">
                            <Binding Path="Employee.Surname"/>
                            <Binding Path="Employee.Name"/>
                            <Binding Path="Employee.Patronymic"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </md:Card.ToolTip>
            <iw:IconViewer ViewStyle="IconTop" x:Name="PART_IconViewer"
                           Image="{Binding Photos[Avatar64].File.Link, Converter={StaticResource employeeImagePathToImageSourceConverter}}"
                           IsImageVisible="True"
                           HorizontalHeaderAlignment="Center">
                <iw:IconViewer.Header>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Margin" Value="4,0"/>
                                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="FontSize" Value="10"/>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding Employee.Surname}" FontWeight="Bold"/>
                        <TextBlock Text="{Binding Employee.Name}" FontWeight="Medium"/>
                    </StackPanel>
                </iw:IconViewer.Header>
            </iw:IconViewer>
        </md:Card>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Photos[Avatar64]}" Value="{x:Null}">
                <Setter TargetName="PART_IconViewer" Property="Image"
                        Value="{svgc:SvgImage Source=/Personnel.Application.Icons;component/SVG/appbar.user.svg}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="EmployeeTemplateLeftImage" DataType="{x:Type staffing:EmployeeViewModel}">
        <iw:IconViewer ViewStyle="IconLeft" x:Name="PART_IconViewer"
                       Image="{Binding Photos[Avatar64].File.Link, Converter={StaticResource employeeImagePathToImageSourceConverter}}"
                       IsImageVisible="True"
                       VerticalHeaderAlignment="Center">
            <iw:IconViewer.Header>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Margin" Value="4,0"/>
                            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="18"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="{Binding Employee.Surname}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding Employee.Name}" FontWeight="Medium"/>
                </StackPanel>
            </iw:IconViewer.Header>
        </iw:IconViewer>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Photos[Avatar64]}" Value="{x:Null}">
                <Setter TargetName="PART_IconViewer" Property="Image"
                        Value="{svgc:SvgImage Source=/Personnel.Application.Icons;component/SVG/appbar.user.svg}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="EmployeeTemplateLeftImageCard" DataType="{x:Type staffing:EmployeeViewModel}">
        <md:Card Margin="4" MinWidth="92" Height="92" ToolTipService.IsEnabled="True" Padding="4">
            <md:Card.ToolTip>
                <TextBlock>
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1} {2}">
                            <Binding Path="Employee.Surname"/>
                            <Binding Path="Employee.Name"/>
                            <Binding Path="Employee.Patronymic"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </md:Card.ToolTip>
            <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource EmployeeTemplateLeftImage}"/>
        </md:Card>
    </DataTemplate>

    <DataTemplate x:Key="EmployeeTemplateTopImageWithDepartment" DataType="{x:Type staffing:EmployeeViewModel}">
        <md:Card Margin="4" Width="92" ToolTipService.IsEnabled="True" Padding="4">
            <md:Card.ToolTip>
                <StackPanel Orientation="Vertical">
                    <TextBlock HorizontalAlignment="Left">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} {1} {2}">
                                <Binding Path="Employee.Surname"/>
                                <Binding Path="Employee.Name"/>
                                <Binding Path="Employee.Patronymic"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Left">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} / {1}">
                                <Binding Path="Department.Name"/>
                                <Binding Path="Employee.Stuffing.Appoint"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </md:Card.ToolTip>
            <md:Card.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Margin" Value="4,0"/>
                    <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="9"/>
                </Style>
            </md:Card.Resources>
            <Grid>
                <iw:IconViewer ViewStyle="IconTop" x:Name="PART_IconViewer"
                           Image="{Binding Photos[Avatar64].File.Link, Converter={StaticResource employeeImagePathToImageSourceConverter}}"
                           IsImageVisible="True"
                           HorizontalHeaderAlignment="Center"
                           HorizontalContentAlignment="Center">
                    <iw:IconViewer.Header>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding Employee.Surname}" FontWeight="Bold"/>
                            <TextBlock Text="{Binding Employee.Name}" FontWeight="Medium"/>
                        </StackPanel>
                    </iw:IconViewer.Header>
                    <iw:IconViewer.Content>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                            <!--<Separator HorizontalAlignment="Stretch"/>-->
                            <TextBlock Text="{Binding Department.Name}" FontWeight="Medium" FontSize="8" TextAlignment="Center" Margin="4"/>
                            <Separator HorizontalAlignment="Stretch"/>
                            <TextBlock Text="{Binding Employee.Stuffing.Appoint}" FontWeight="Medium" FontSize="8" TextAlignment="Center" Margin="4"/>
                        </StackPanel>
                    </iw:IconViewer.Content>
                </iw:IconViewer>
                <Button x:Name="PART_EditEmployeeButton" HorizontalAlignment="Right" VerticalAlignment="Top"
                        Content="..."
                        Command="{Binding EditCommand}"
                        ToolTip="Edit employee" ToolTipService.IsEnabled="True"
                        Visibility="Collapsed"
                        Cursor="Hand"
                        Margin="8,8">
                    <Button.LayoutTransform>
                        <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                    </Button.LayoutTransform>
                </Button>
            </Grid>
        </md:Card>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Photos[Avatar64]}" Value="{x:Null}">
                <Setter TargetName="PART_IconViewer" Property="Image" 
                        Value="{svgc:SvgImage Source=/Personnel.Application.Icons;component/SVG/appbar.user.svg}"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_EditEmployeeButton" Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Owner.CanManageEmployes}" Value="False">
                <Setter TargetName="PART_EditEmployeeButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="EmployeeTemplateTopImageSimpleDraggable" DataType="{x:Type staffing:EmployeeViewModel}">
        <ContentPresenter x:Name="PART_Employee"
                          Content="{Binding}" 
                          ContentTemplate="{StaticResource EmployeeTemplateTopImage}"
                          VerticalAlignment="Center" HorizontalAlignment="Center"
                          Cursor="Hand">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <add:EventToCommand Command="{Binding Source={x:Static add:Locator.StartDraggingCommand}}"
                                        CommandParameter="{Binding}"
                                        PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ContentPresenter>
    </DataTemplate>

    <DataTemplate x:Key="EmployeeTemplateTopImageWithDepartmentSimpleDraggable" DataType="{x:Type staffing:EmployeeViewModel}">
        <ContentPresenter x:Name="PART_Employee"
                          Content="{Binding}" 
                          ContentTemplate="{StaticResource EmployeeTemplateTopImageWithDepartment}"
                          VerticalAlignment="Center" HorizontalAlignment="Center"
                          Cursor="Hand">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <add:EventToCommand Command="{Binding Source={x:Static add:Locator.StartDraggingCommand}}"
                                        CommandParameter="{Binding}"
                                        PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ContentPresenter>
    </DataTemplate>

    <DataTemplate x:Key="EmployeeEmptyTemplate" DataType="{x:Type staffing:EmployeeViewModel}">
        <Button Margin="16,16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Style="{DynamicResource MaterialDesignFloatingActionAccentButton}"
                Command="{Binding EditCommand}" 
                ToolTip="Add new employee"
                ToolTipService.IsEnabled="True"
                Cursor="Hand"
                Content="{StaticResource employeeStaffingPlusContent}">
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="EmployeeEditTemplate" DataType="{x:Type staffing:EmployeeViewModel}">
        <Grid x:Name="PART_rootGrid" DataContext="{Binding}">
            
            <!-- Fade background -->
            <Border Background="#99000000">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <add:EventToCommand Command="{Binding CancelCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
            
            <md:Card VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="240" MinHeight="320">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="PART_IsBusyProgressBar" Visibility="Collapsed" Grid.Row="0">
                        <ProgressBar Style="{DynamicResource MaterialDesignCircularProgressBar}" IsIndeterminate="True"/>
                        <TextBlock Text="Saving..." Margin="8"/>
                    </StackPanel>

                    <TextBlock x:Name="PART_IsNotBusyText" HorizontalAlignment="Center" Margin="8" 
                               Text="Employee editing" Grid.Row="0"/>

                    <Border Background="{StaticResource ErrorBrush}" x:Name="PART_EmployeeError" Grid.Row="1"
                            Visibility="Collapsed" HorizontalAlignment="Stretch">
                        <TextBlock Margin="8" TextWrapping="WrapWithOverflow"
                                   Text="{Binding Error, StringFormat=Error catched: {0}}" FontSize="8"/>
                    </Border>

                    <TabControl Margin="8,8" Grid.Row="2">
                        <TabItem Header="Employee">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                                <Grid>
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Margin" Value="4"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                            <Setter Property="Margin" Value="4"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/> <!-- 0 -->
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/> <!-- 7 -->
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.ColumnSpan="999">
                                        <Image Width="256" MaxHeight="256" HorizontalAlignment="Center"
                                               Stretch="Uniform"
                                               Source="{Binding Photos[None].File.Link, Converter={StaticResource employeeImagePathToImageSourceConverter}}"/>
                                        <Button Content="Change photo..." VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="8"
                                                Command="{Binding ChangePhotoCommand}"/>
                                    </Grid>

                                    <TextBlock Text="Surname" Grid.Column="0" Grid.Row="1"/>
                                    <TextBox Text="{Binding EmployeeForEdit.Surname}" Grid.Column="1" Grid.Row="1"/>

                                    <TextBlock Text="Name" Grid.Column="0" Grid.Row="2"/>
                                    <TextBox Text="{Binding EmployeeForEdit.Name}" Grid.Column="1" Grid.Row="2"/>

                                    <TextBlock Text="Patronymic" Grid.Column="0" Grid.Row="3"/>
                                    <TextBox Text="{Binding EmployeeForEdit.Patronymic}" Grid.Column="1" Grid.Row="3"/>

                                    <TextBlock Text="Email" Grid.Column="0" Grid.Row="4"/>
                                    <TextBox Text="{Binding EmployeeForEdit.Email}" Grid.Column="1" Grid.Row="4"/>

                                    <TextBlock Text="Phone" Grid.Column="0" Grid.Row="5"/>
                                    <TextBox Text="{Binding EmployeeForEdit.Phone}" Grid.Column="1" Grid.Row="5"/>

                                    <TextBlock Text="Birthday" Grid.Column="0" Grid.Row="6"/>
                                    <DatePicker SelectedDate="{Binding EmployeeForEdit.Birthday}" Grid.Column="1" Grid.Row="6"/>
                                </Grid>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Rights">

                            <ListBox ItemsSource="{Binding RightView}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type staffing:RightView}">
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                                      IsEnabled="{Binding ElementName=PART_rootGrid, Path=DataContext.Owner.CanManageEmployeeRights}"
                                                      Margin="0,0,4,0">
                                                <CheckBox.Content>
                                                    <TextBlock Text="{Binding Right.Name}"/>
                                                </CheckBox.Content>
                                            </CheckBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            
                        </TabItem>
                        <TabItem Header="Logins">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Margin="0,4" x:Name="PART_AddLoginPart" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Text="Add login:"/>
                                    <TextBox Grid.Row="1" Text="{Binding NewLoginToAdd, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="1" Grid.Column="1" Content="Add"
                                            Margin="4,0,0,0"
                                            Command="{Binding AddLoginCommand}"/>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <ListBox ItemsSource="{Binding EmployeeForEdit.Logins}" x:Name="lbLogins"
                                             MinHeight="240" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type ss:EmployeeLogin}">
                                                <TextBlock Text="{Binding Login}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Button Grid.Row="1" Content="Delete" Margin="0,4,0,0"
                                            x:Name="PART_DeleteLoginButton" Visibility="Collapsed"
                                            Command="{Binding DeleteLoginCommand}"
                                            CommandParameter="{Binding ElementName=lbLogins, Path=SelectedItem}"
                                            IsEnabled="{Binding ElementName=lbLogins, Path=SelectedItem, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter={x:Null}}"
                                            />
                                </Grid>
                            </Grid>
                        </TabItem>
                    </TabControl>
                    
                    <StackPanel Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Center">
                        <Button Content="Save" Margin="8,8"
                                Command="{Binding SaveCommand}"/>
                        <Button Content="Cancel" Margin="8,8"
                                Command="{Binding CancelCommand}"/>
                    </StackPanel>
                </Grid>
            </md:Card>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsBusy}" Value="True">
                <Setter TargetName="PART_IsBusyProgressBar"  Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_IsNotBusyText"  Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding HasError}" Value="True">
                <Setter TargetName="PART_EmployeeError" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Owner.CanManageEmployeeLogins}" Value="True">
                <Setter TargetName="PART_DeleteLoginButton" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_AddLoginPart" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>