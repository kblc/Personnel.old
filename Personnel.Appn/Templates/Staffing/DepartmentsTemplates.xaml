<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:localConverters="clr-namespace:Personnel.Appn.Converters"
                    xmlns:helperConverters="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
                    xmlns:staffing="clr-namespace:Personnel.Application.ViewModels.Staffing;assembly=Personnel.Application.ViewModels"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="/Personnel.Appn;component/Styles/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Viewbox Width="20" Height="20" x:Key="plusContent" Stretch="UniformToFill" x:Shared="False">
        <Path Style="{StaticResource plusPathStyle}"/>
    </Viewbox>
    <Viewbox Width="20" Height="20" x:Key="minusContent" Stretch="UniformToFill" x:Shared="False">
        <Path Style="{StaticResource minusPathStyle}"/>
    </Viewbox>

    <helperConverters:ReverseBooleanToVisibilityConverter x:Key="departmentsReverseBooleanToVisibilityConverter"/>
    <BooleanToVisibilityConverter x:Key="departmentsBooleanToVisibilityConverter"/>
    <helperConverters:MultiBooleanANDToBooleanConverter x:Key="departmentsMultiBooleanANDToBooleanConverter"/>
    <helperConverters:IsEqualsConverter x:Key="departmentsIsEqualsConverter"/>
    <helperConverters:ApplyConverter x:Key="departmentsApplyConverter"/>
    <helperConverters:IsNotEqualsConverter x:Key="departmentsIsNotEqualsConverter"/>
    <helperConverters:IsNotEqualVisibilityConverter x:Key="departmentsIsNotEqualVisibilityConverter"/>
    <localConverters:IsNotEmptyStringConverter x:Key="departmentsIsNotEmptyStringConverter"/>
    <localConverters:IsNotEmptyStringToVisibilityConverter x:Key="departmentsIsNotEmptyStringToVisibilityConverter"/>

    <HierarchicalDataTemplate x:Key="recursiveDepartmentTemplate" ItemsSource="{Binding Childs}" DataType="{x:Type staffing:DepartmentEditViewModel}">
        <Grid Background="Transparent" x:Name="RootItemGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Is busy progress bar (first column) -->
            <ProgressBar Style="{DynamicResource MaterialDesignCircularProgressBar}" Width="20"
                         Visibility="{Binding IsBusy, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                         IsIndeterminate="True"
                         VerticalAlignment="Center" HorizontalAlignment="Center"/>
            
            <Grid Grid.Column="1" VerticalAlignment="Center">
                <Grid.IsEnabled>
                    
                    <!-- Disable if busy or is deleted -->
                    <MultiBinding Converter="{StaticResource departmentsMultiBooleanANDToBooleanConverter}">
                        <Binding Path="IsBusy" Converter="{StaticResource departmentsIsEqualsConverter}" ConverterParameter="False"/>
                        <Binding Path="IsDeleted" Converter="{StaticResource departmentsIsEqualsConverter}" ConverterParameter="False"/>
                    </MultiBinding>
                </Grid.IsEnabled>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal">
                    
                    <StackPanel x:Name="PART_Error" Visibility="Hidden" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4">
                        <Button VerticalAlignment="Center"
                                Margin="8"
                                Style="{DynamicResource MaterialDesignRaisedLightButton}"
                                Command="{Binding CopyErrorCommand}" 
                                ToolTip="{Binding Error, StringFormat=Press button to copy error: {0}}"
                                ToolTipService.IsEnabled="True">
                            <Button.LayoutTransform>
                                <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                            </Button.LayoutTransform>
                            <TextBlock Text="?" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                    </StackPanel>

                    <StackPanel x:Name="PART_Caption" VerticalAlignment="Center" Margin="4" Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanManage}" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <StackPanel.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding SetToEditModeCommand}"/>
                        </StackPanel.InputBindings>

                        <TextBlock Text="{Binding Data.Id, StringFormat=[{0}]}" Margin="4" IsEnabled="False"
                                   Visibility="{Binding IsDebugView, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                                   VerticalAlignment="Center"
                                   FontSize="{Binding ElementName=PART_DepartmentName, Path=FontSize, Converter={StaticResource departmentsApplyConverter}, ConverterParameter=-4}"/>

                        <TextBlock Text="{Binding Data.Name}" VerticalAlignment="Center" x:Name="PART_DepartmentName"/>

                        <TextBlock Text="{Binding Childs.Count, StringFormat=(childs: {0})}" Margin="8"
                                   Visibility="{Binding IsDebugView, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                                   IsEnabled="False" VerticalAlignment="Center" 
                                   FontSize="{Binding ElementName=PART_DepartmentName, Path=FontSize, Converter={StaticResource departmentsApplyConverter}, ConverterParameter=-4}"/>
                    </StackPanel>

                    <StackPanel x:Name="PART_EditBox" Margin="4" Visibility="Collapsed" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBox Text="{Binding DepartmentName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 VerticalAlignment="Center" MinWidth="300" Margin="4"/>
                        <Button VerticalAlignment="Center" Command="{Binding SaveCommand}" Margin="4">
                            <TextBlock Text="save"/>
                        </Button>
                        <Button VerticalAlignment="Center" Command="{Binding CancelCommand}" Margin="4">
                            <TextBlock Text="cancel"/>
                        </Button>
                    </StackPanel>

                    <StackPanel x:Name="PART_AdditionalButtons" Visibility="Hidden"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center" MinWidth="200" Orientation="Horizontal">
                        <Button VerticalAlignment="Center" x:Name="PART_ButtonAddChild"
                                Margin="8"
                                Style="{DynamicResource MaterialDesignFloatingActionAccentButton}"
                                Command="{Binding AddChildCommand}" 
                                Visibility="{Binding CanManage, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                                ToolTip="Add new department"
                                ToolTipService.IsEnabled="True"
                                Content="{StaticResource plusContent}">
                        </Button>
                        <Button VerticalAlignment="Center" 
                                Margin="8"
                                Style="{DynamicResource MaterialDesignFloatingActionDarkButton}"
                                Command="{Binding DeleteCommand}" 
                                Visibility="{Binding CanManage, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                                ToolTip="Remove department"
                                ToolTipService.IsEnabled="True"
                                Content="{StaticResource minusContent}">
                            <Button.LayoutTransform>
                                <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                            </Button.LayoutTransform>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Grid>
        <HierarchicalDataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_AdditionalButtons" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter TargetName="PART_AdditionalButtons" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEditMode}" Value="True">
                <Setter TargetName="PART_EditBox" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_AdditionalButtons" Property="Visibility" Value="Hidden" />
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Error, Converter={StaticResource departmentsIsNotEmptyStringConverter}}" Value="True">
                <Setter TargetName="PART_Error" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <DataTemplate DataType="{x:Type staffing:DepartmentEditViewModel}" x:Key="DepartmentsTreeViewTemplate">
        <Grid>
            <Grid.Resources>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                    <Setter Property="IsExpanded" Value="True"/>
                </Style>
            </Grid.Resources>
            
            <!-- Tree -->
            <TreeView ItemsSource="{Binding Departments}" 
                      ItemTemplate="{StaticResource recursiveDepartmentTemplate}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"/>

            <!-- Buttons -->            
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="16">
                <Button Style="{DynamicResource MaterialDesignFloatingActionAccentButton}" 
                        Cursor="Hand" Margin="8"
                        Command="{Binding InsertDepartmentCommand}"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{StaticResource plusContent}">
                </Button>
                <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}"
                              Cursor="Hand" Margin="8" 
                              IsChecked="{Binding IsDebugView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type staffing:StaffingViewModel}" x:Key="DepartmentsViewTemplate">
        <Grid>
            <!-- Show tree -->
            <Grid>
                <ContentPresenter Margin="16"
                                  Content="{Binding}"
                                  ContentTemplate="{StaticResource DepartmentsTreeViewTemplate}"/>

                <!-- Visibility="{Binding IsLoaded, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"-->

                <Border Background="#99000000" Visibility="{Binding IsLoaded, Converter={StaticResource departmentsReverseBooleanToVisibilityConverter}}"/>
            </Grid>

            <StackPanel>
                <!-- Loading part -->
                <md:ColorZone Mode="Light" Padding="16"
                              Visibility="{Binding IsLoaded, Converter={StaticResource departmentsReverseBooleanToVisibilityConverter}}">
                    <WrapPanel Orientation="Horizontal">
                        <ProgressBar Style="{DynamicResource MaterialDesignCircularProgressBar}" IsIndeterminate="True" VerticalAlignment="Center"/>
                        <TextBlock Text="Load departments tree..." Margin="8" VerticalAlignment="Center"/>
                    </WrapPanel>
                </md:ColorZone>

                <!-- Error -->
                <md:ColorZone Mode="Dark" Padding="16"
                              Visibility="{Binding Error, Converter={StaticResource departmentsIsNotEmptyStringToVisibilityConverter}}">
                    <WrapPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Error, StringFormat={}Error: {0}}" Margin="8" VerticalAlignment="Center"/>
                    </WrapPanel>
                </md:ColorZone>
            </StackPanel>
        </Grid>
    </DataTemplate>

</ResourceDictionary>