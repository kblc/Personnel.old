<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
                    xmlns:static="clr-namespace:Personnel.Application.ViewModels.Staffing;assembly=Personnel.Application.ViewModels"
                    xmlns:localConverters="clr-namespace:Personnel.Appn.Converters"
                    xmlns:helperConverterss="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <helperConverterss:ReverseBooleanToVisibilityConverter x:Key="departmentsReverseBooleanToVisibilityConverter"/>
    <BooleanToVisibilityConverter x:Key="departmentsBooleanToVisibilityConverter"/>
    <helperConverterss:MultiBooleanANDToBooleanConverter x:Key="departmentsMultiBooleanANDToBooleanConverter"/>
    <helperConverterss:IsEqualsConverter x:Key="departmentsIsEqualsConverter"/>
    <helperConverterss:ApplyConverter x:Key="departmentsApplyConverter"/>

    <HierarchicalDataTemplate x:Key="recursiveDepartmentTemplate" ItemsSource="{Binding Childs}" DataType="{x:Type static:DepartmentEditViewModel}">
        <Grid Background="Transparent" x:Name="RootItemGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" Width="20"
                         Visibility="{Binding IsBusy, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                         IsIndeterminate="True"
                         VerticalAlignment="Center" HorizontalAlignment="Center"/>

            <Grid Grid.Column="1" VerticalAlignment="Center">
                <Grid.IsEnabled>
                    <MultiBinding Converter="{StaticResource departmentsMultiBooleanANDToBooleanConverter}">
                        <Binding Path="IsBusy" Converter="{StaticResource departmentsIsEqualsConverter}" ConverterParameter="False"/>
                        <Binding Path="IsDeleted" Converter="{StaticResource departmentsIsEqualsConverter}" ConverterParameter="False"/>
                    </MultiBinding>
                </Grid.IsEnabled>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Department.Id, StringFormat=[{0}]}" Margin="4" IsEnabled="False"
                               Visibility="{Binding ShowDebugInfo, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                               VerticalAlignment="Center"/>
                    <StackPanel VerticalAlignment="Center" Margin="4" Orientation="Horizontal"
                                Visibility="{Binding IsEditMode, Converter={StaticResource departmentsReverseBooleanToVisibilityConverter}}">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}"> <!--  BasedOn="{StaticResource {x:Type StackPanel}}" -->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanManage}" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <StackPanel.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding SetToEditModeCommand}"/>
                        </StackPanel.InputBindings>
                        <TextBlock Text="{Binding Department.Name}" VerticalAlignment="Center" x:Name="PART_DepartmentName"/>
                        <TextBlock Text="{Binding Childs.Count, StringFormat=(childs: {0})}" Margin="8"
                                   Visibility="{Binding ShowDebugInfo, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                                   IsEnabled="False"
                                   VerticalAlignment="Center" FontSize="{Binding ElementName=PART_DepartmentName, Path=FontSize, Converter={StaticResource departmentsApplyConverter}, ConverterParameter=-4}"/>
                    </StackPanel>
                    
                    <StackPanel x:Name="PART_EditBox" Margin="4" Visibility="Collapsed" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBox Text="{Binding DepartmentName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 VerticalAlignment="Center" MinWidth="300" Margin="4"/>
                        <Button VerticalAlignment="Center" Command="{Binding SaveCommand}" Margin="4">
                            <TextBlock Text="save"/>
                        </Button>
                        <Button VerticalAlignment="Center" Command="{Binding CancelCommand}" Margin="4">
                            <TextBlock Text="cancel"/>
                        </Button>
                    </StackPanel>

                    <StackPanel x:Name="PART_AdditionalButtons" Visibility="Hidden"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center" MinWidth="200" Orientation="Horizontal">
                        <Button VerticalAlignment="Center"
                                Margin="8"
                                Style="{DynamicResource MaterialDesignFloatingActionAccentButton}"
                                Command="{Binding AddChildCommand}" 
                                Visibility="{Binding CanManage, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                                ToolTip="Add new department"
                                ToolTipService.IsEnabled="True">
                            <TextBlock Text="+" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                        <Button VerticalAlignment="Center" 
                                Margin="8"
                                Style="{DynamicResource MaterialDesignFloatingActionDarkButton}"
                                Command="{Binding DeleteCommand}" 
                                Visibility="{Binding CanManage, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"
                                ToolTip="Remove department"
                                ToolTipService.IsEnabled="True">
                            <Button.LayoutTransform>
                                <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                            </Button.LayoutTransform>
                            <TextBlock Text="-" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                    </StackPanel>

                </StackPanel>

                <StackPanel x:Name="PART_Error" Grid.Row="1" Visibility="Collapsed">
                    <TextBlock Text="Error:"/>
                    <TextBox IsReadOnly="True" Margin="4"
                         Text="{Binding Error, Mode=OneWay}" MaxLines="5" MinLines="1" AcceptsReturn="True"
                         TextWrapping="WrapWithOverflow"
                         ScrollViewer.CanContentScroll="True" 
                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                         Width="{Binding ElementName=RootItemGrid, Path=ActualWidth, Converter={StaticResource departmentsApplyConverter}, ConverterParameter=-20}"
                         FontSize="{Binding ElementName=PART_DepartmentName, Path=FontSize, Converter={StaticResource departmentsApplyConverter}, ConverterParameter=-4}">
                    </TextBox>
                </StackPanel>
            </Grid>
        </Grid>
        <HierarchicalDataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_AdditionalButtons" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter TargetName="PART_AdditionalButtons" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEditMode}" Value="True">
                <Setter TargetName="PART_EditBox" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_AdditionalButtons" Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding HasError}" Value="True">
                <Setter TargetName="PART_Error" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <DataTemplate DataType="{x:Type static:DepartmentsEditViewModel}" x:Key="DepartmentsTreeViewTemplate">
        <Grid>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <ScrollViewer.Resources>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsExpanded" Value="True"/>
                    </Style>
                </ScrollViewer.Resources>
                <TreeView ItemsSource="{Binding Tree}" ItemTemplate="{StaticResource recursiveDepartmentTemplate}"/>
            </ScrollViewer>

            <md:ColorZone Mode="Light" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="16">
                <StackPanel Orientation="Horizontal">
                    <Button Style="{DynamicResource MaterialDesignFloatingActionAccentButton}" 
                            Cursor="Hand" Margin="8"
                            Command="{Binding InsertCommand}">
                        <TextBlock Text="+" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>

                    <ToggleButton Style="{DynamicResource MaterialDesignFlatToggleButton}"
                                  Cursor="Hand" Margin="8" IsChecked="{Binding ShowDebugInfo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock Text="dbg" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </ToggleButton>
                </StackPanel>
            </md:ColorZone>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type static:DepartmentsEditViewModel}" x:Key="DepartmentsViewTemplate">
        <Grid>
            <md:ColorZone Mode="Light" Padding="16"
                          Visibility="{Binding IsLoaded, Converter={StaticResource departmentsReverseBooleanToVisibilityConverter}}">
                <WrapPanel Orientation="Horizontal">
                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" 
                                 IsIndeterminate="True"
                                 VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <TextBlock Text="Загрузка дерева отделов..." Margin="8" VerticalAlignment="Center"/>
                </WrapPanel>
            </md:ColorZone>

            <md:ColorZone Mode="Dark" Padding="16"
                          Visibility="{Binding HasError, Converter={StaticResource departmentsBooleanToVisibilityConverter}}">
                <WrapPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Error}" Margin="8" VerticalAlignment="Center"/>
                </WrapPanel>
            </md:ColorZone>

            <ContentPresenter Margin="16"
                              Content="{Binding}"
                              ContentTemplate="{DynamicResource DepartmentsTreeViewTemplate}"
                              Visibility="{Binding IsLoaded, Converter={StaticResource departmentsBooleanToVisibilityConverter}}"/>
        </Grid>
    </DataTemplate>

</ResourceDictionary>