<Window x:Class="Personnel.Appn.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Personnel.Appn"
        xmlns:static="clr-namespace:Personnel.Application.ViewModels;assembly=Personnel.Application.ViewModels"
        xmlns:staticNotification="clr-namespace:Personnel.Application.ViewModels.Notifications;assembly=Personnel.Application.ViewModels"
        xmlns:helperConverters="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
        xmlns:helper="clr-namespace:Helpers.WPF;assembly=Helpers.WPF"
        xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        xmlns:controls="clr-namespace:Personnel.Appn.Controls"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="780"
        x:Name="root">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
                <ResourceDictionary Source="Templates/Notifications/NotificationTemplates.xaml" />
                <ResourceDictionary Source="Templates/Birthdays/BirthdaysTemplates.xaml" />
                <ResourceDictionary Source="Templates/Staffing/DepartmentsTemplates.xaml" />
                <ResourceDictionary>
                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                    <helperConverters:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter"/>
                    <helperConverters:ApplyConverter x:Key="ApplyConverter"/>
                    <helperConverters:MultiBooleanORToVisibilityConverter x:Key="MultiBooleanORToVisibilityConverter"/>
                    <helperConverters:IsEqualsConverter x:Key="IsEqualsConverter"/>
                    <helperConverters:IsNotEqualVisibilityConverter x:Key="IsNotEqualVisibilityConverter"/>
                    <helperConverters:NullToFalseConverter x:Key="NullToFalseConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <md:DialogHost Identifier="RootDialog" Grid.Column="1" Grid.Row="1">
        <md:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <md:DrawerHost.LeftDrawerContent>
                <StackPanel Orientation="Vertical">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                            HorizontalAlignment="Right" Margin="16"
                            IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                    <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"                         
                            PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="controls:ContentStorageControl">
                                <ContentPresenter Content="{Binding Header}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <controls:ContentStorageControl IsLoaded="{Binding Source={x:Static static:Static.Departments}, Path=IsLoaded}"
                                                        Caption="Отделы">
                            <controls:ContentStorageControl.Header>
                                <TextBlock Text="Отделы" Margin="32 0 32 0" />
                            </controls:ContentStorageControl.Header>
                            <controls:ContentStorageControl.Content>
                                <ContentPresenter Content="{x:Static static:Static.Departments}" 
                                                  ContentTemplate="{DynamicResource DepartmentsViewTemplate}"/>
                            </controls:ContentStorageControl.Content>
                        </controls:ContentStorageControl>
                        <controls:ContentStorageControl IsLoaded="{Binding Source={x:Static static:Static.Birthdays}, Path=IsLoaded}"
                                                        Caption="{Binding Source={x:Static static:Static.Birthdays}, Path=Today.Count, StringFormat=Дни рождения ({0})}">
                            <controls:ContentStorageControl.Header>
                                <TextBlock Text="{Binding Source={x:Static static:Static.Birthdays}, Path=Today.Count, StringFormat=Дни рождения ({0})}" Margin="32 0 32 0" />
                            </controls:ContentStorageControl.Header>
                            <controls:ContentStorageControl.Content>
                                <Grid DataContext="{x:Static static:Static.Birthdays}">
                                    <Grid Margin="16" Visibility="{Binding IsLoaded, Converter={StaticResource booleanToVisibilityConverter}}">
                                        <ContentPresenter Content="{Binding SelectedLevel}" ContentTemplate="{DynamicResource BirthdaysLevelTemplate}"/>
                                        <Grid VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="48">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding SelectedLevel.Name}" FontSize="18" FontWeight="Bold"/>
                                            <Button Content="+" Grid.Column="1" Command="{Binding LevelUpCommand}"/>
                                            <Button Content="-" Grid.Column="2" Command="{Binding LevelDownCommand}"/>
                                        </Grid>
                                    </Grid>
                                </Grid> 
                            </controls:ContentStorageControl.Content>
                        </controls:ContentStorageControl>
                        <controls:ContentStorageControl IsLoaded="{Binding Source={x:Static static:Static.Notifications}, Path=IsLoaded}"
                                                        Caption="{Binding Source={x:Static static:Static.Notifications}, Path=Notifications.Count, StringFormat=Уведомления ({0})}">
                            <controls:ContentStorageControl.Header>
                                <TextBlock Text="{Binding Source={x:Static static:Static.Notifications}, Path=Notifications.Count, StringFormat=Уведомления ({0})}" Margin="32 0 32 0" />
                            </controls:ContentStorageControl.Header>
                            <controls:ContentStorageControl.Content>
                                <Grid DataContext="{x:Static static:Static.Notifications}">
                                    <Grid.Resources>
                                        <CollectionViewSource Source="{Binding Notifications}" x:Key="notifications">
                                            <CollectionViewSource.SortDescriptions>
                                                <scm:SortDescription PropertyName="Created" Direction="Descending"/>
                                            </CollectionViewSource.SortDescriptions>
                                        </CollectionViewSource>
                                    </Grid.Resources>

                                    <ScrollViewer x:Name="NotificationsGrid" Margin="16" >
                                        <ItemsControl ItemsSource="{Binding Source={StaticResource notifications}}"
                                                    ItemTemplate="{DynamicResource NotificationItemTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" ItemWidth="320" ItemHeight="60"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </ScrollViewer>

                                    <Border Background="#99000000"
                                        Visibility="{Binding SelectedNotification, Converter={StaticResource IsNotEqualVisibilityConverter}}">
                                        <Border.InputBindings>
                                            <MouseBinding Command="{Binding ClearSelectionCommand}" MouseAction="LeftClick"/>
                                        </Border.InputBindings>
                                        <Grid HorizontalAlignment="Right" Width="300">

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <ContentControl Content="{Binding SelectedNotification, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                        ContentTemplate="{DynamicResource NotificationWatchItemTemplate}"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </controls:ContentStorageControl.Content>
                        </controls:ContentStorageControl>
                    </ListBox>
                </StackPanel>
            </md:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <md:ColorZone Padding="8" md:ShadowAssist.ShadowDepth="Depth2"
                            Mode="PrimaryLight" DockPanel.Dock="Top">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                    x:Name="MenuToggleButton" VerticalAlignment="Center"/>

                        <TextBlock Text="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Caption, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   Grid.Column="1" Margin="8" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="23"/>
                        
                        <!--<ContentPresenter Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Header, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                          Grid.Column="1" Margin="8" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
                        
                        <Border Grid.Column="2" DataContext="{x:Static static:Static.History}" VerticalAlignment="Center" Width="60">
                            <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" 
                                        IsIndeterminate="True"
                                        VerticalAlignment="Center" HorizontalAlignment="Center">
                                <ProgressBar.Visibility>
                                    <MultiBinding Converter="{StaticResource MultiBooleanORToVisibilityConverter}">
                                        <Binding Path="IsConnecting" Converter="{StaticResource IsEqualsConverter}" ConverterParameter="True"/>
                                        <Binding Path="IsWaiting" Converter="{StaticResource IsEqualsConverter}" ConverterParameter="False"/>
                                        <Binding Path="IsLoaded" Converter="{StaticResource IsEqualsConverter}" ConverterParameter="False"/>
                                        <Binding ElementName="DemoItemsListBox" Path="SelectedItem.IsLoaded" Converter="{StaticResource IsEqualsConverter}" ConverterParameter="False"/>
                                    </MultiBinding>
                                </ProgressBar.Visibility>
                            </ProgressBar>
                        </Border>
                    </Grid>
                </md:ColorZone>
                <ContentControl Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Content, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
        </md:DrawerHost>
    </md:DialogHost>
</Window>
