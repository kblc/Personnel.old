<Window x:Class="Personnel.Appn.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Personnel.Appn"
        xmlns:static="clr-namespace:Personnel.Application.ViewModels;assembly=Personnel.Application.ViewModels"
        xmlns:staticNotification="clr-namespace:Personnel.Application.ViewModels.Notifications;assembly=Personnel.Application.ViewModels"
        xmlns:helperConverters="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
        xmlns:helper="clr-namespace:Helpers.WPF;assembly=Helpers.WPF"
        xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        xmlns:controls="clr-namespace:Personnel.Appn.Controls"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        
        xmlns:notification="clr-namespace:Personnel.Application.ViewModels.Notifications;assembly=Personnel.Application.ViewModels"
        xmlns:history="clr-namespace:Personnel.Application.ViewModels.History;assembly=Personnel.Application.ViewModels"
        xmlns:staffing="clr-namespace:Personnel.Application.ViewModels.Staffing;assembly=Personnel.Application.ViewModels"
        xmlns:birthdays="clr-namespace:Personnel.Application.ViewModels.Birthdays;assembly=Personnel.Application.ViewModels"
        
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        FontFamily="/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="780"
        x:Name="root">

    <!-- TextElement.Foreground="{DynamicResource MaterialDesignBody}" Background="{DynamicResource MaterialDesignPaper}"-->
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary >
                    <notification:NotificationsViewModel x:Key="notifications"
                                                         MaxNotificationsCount="50"
                                                         IsActive="True"
                                                         ConnectionTimeInterval="00:01:00"/>
                    <history:HistoryViewModel x:Key="history"
                                              Notifications="{StaticResource notifications}"
                                              IsActive="True"/>
                    <staffing:StaffingViewModel x:Key="staffing"
                                                History="{StaticResource history}"
                                                Notifications="{StaticResource notifications}"
                                                IsActive="True"
                                                IsDebugView="True"/>
                    <birthdays:BirthdaysViewModel x:Key="birthdays"
                                                  Notifications="{StaticResource notifications}"
                                                  Staffing="{StaticResource staffing}"/>
                </ResourceDictionary>
                <ResourceDictionary Source="/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
                <ResourceDictionary Source="Templates/Notifications/NotificationsTemplates.xaml" />
                <ResourceDictionary Source="Templates/Birthdays/BirthdaysTemplates.xaml" />
                <ResourceDictionary Source="Templates/Staffing/DepartmentsTemplates.xaml" />
                <ResourceDictionary>
                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                    <helperConverters:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter"/>
                    <helperConverters:ApplyConverter x:Key="ApplyConverter"/>
                    <helperConverters:MultiBooleanORToVisibilityConverter x:Key="MultiBooleanORToVisibilityConverter"/>
                    <helperConverters:IsEqualsConverter x:Key="IsEqualsConverter"/>
                    <helperConverters:IsNotEqualVisibilityConverter x:Key="IsNotEqualVisibilityConverter"/>
                    <helperConverters:NullToFalseConverter x:Key="NullToFalseConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <md:DialogHost Identifier="RootDialog">
            <md:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <md:DrawerHost.LeftDrawerContent>
                    <StackPanel Orientation="Vertical">
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                      HorizontalAlignment="Right" Margin="16"
                                      IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                        <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"                         
                                 PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type controls:ContentStorageControl}">
                                    <ContentPresenter Content="{Binding Header}" Margin="32,4" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                            <controls:ContentStorageControl IsLoaded="{Binding Source={StaticResource staffing}, Path=IsLoaded}"
                                                            Caption="Departments" Header="Departments">
                                <controls:ContentStorageControl.Content>
                                    <ContentPresenter Content="{StaticResource staffing}" ContentTemplate="{StaticResource DepartmentsViewTemplate}"/>
                                </controls:ContentStorageControl.Content>
                            </controls:ContentStorageControl>

                            <controls:ContentStorageControl IsLoaded="{Binding Source={StaticResource birthdays}, Path=IsLoaded}"> <!--Caption="Birthdays">-->
                                <controls:ContentStorageControl.Caption>
                                    <TextBlock Text="{Binding Source={StaticResource birthdays}, Path=SelectedLevel.Name, StringFormat=Birthdays ({0})}"/>
                                </controls:ContentStorageControl.Caption>
                                <controls:ContentStorageControl.Header>
                                    <TextBlock Text="{Binding Source={StaticResource birthdays}, Path=Today.Count, StringFormat=Birthdays ({0})}"/>
                                </controls:ContentStorageControl.Header>
                                <controls:ContentStorageControl.Content>
                                    <ContentPresenter Content="{StaticResource birthdays}" ContentTemplate="{StaticResource BirthdaysViewTemplate}"/>
                                </controls:ContentStorageControl.Content>
                            </controls:ContentStorageControl>

                            <controls:ContentStorageControl IsLoaded="{Binding Source={StaticResource notifications}, Path=IsLoaded}"
                                                            Caption="Notifications">
                                <controls:ContentStorageControl.Header>
                                    <TextBlock Text="{Binding Source={StaticResource notifications}, Path=Notifications.Count, StringFormat=Notifications ({0})}"/>
                                </controls:ContentStorageControl.Header>
                                <controls:ContentStorageControl.Content>
                                    <ContentPresenter Content="{StaticResource notifications}" ContentTemplate="{DynamicResource NotificationsViewTemplate}"/>
                                </controls:ContentStorageControl.Content>
                            </controls:ContentStorageControl>
                        </ListBox>
                    </StackPanel>
                </md:DrawerHost.LeftDrawerContent>
                <DockPanel>
                    <md:ColorZone Padding="8" md:ShadowAssist.ShadowDepth="Depth2"
                            Mode="PrimaryLight" DockPanel.Dock="Top">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                    x:Name="MenuToggleButton" VerticalAlignment="Center"/>

                            <ContentControl Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Caption, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                            Grid.Column="1" Margin="8" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="23"/>
                            
                            <!--<TextBlock Text="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Caption, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   Grid.Column="1" Margin="8" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="23"/>-->

                            <Border Grid.Column="2" DataContext="{StaticResource history}" VerticalAlignment="Center" Width="60">
                                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" 
                                        IsIndeterminate="True"
                                        VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <ProgressBar.Visibility>
                                        <MultiBinding Converter="{StaticResource MultiBooleanORToVisibilityConverter}">
                                            <!--<Binding Path="IsConnecting" Converter="{StaticResource IsEqualsConverter}" ConverterParameter="True"/>-->
                                            <Binding Path="IsWaiting" Converter="{StaticResource IsEqualsConverter}" ConverterParameter="False"/>
                                            <Binding Path="IsLoaded" Converter="{StaticResource IsEqualsConverter}" ConverterParameter="False"/>
                                            <Binding ElementName="DemoItemsListBox" Path="SelectedItem.IsLoaded" Converter="{StaticResource IsEqualsConverter}" ConverterParameter="False"/>
                                        </MultiBinding>
                                    </ProgressBar.Visibility>
                                </ProgressBar>
                            </Border>
                        </Grid>
                    </md:ColorZone>
                    <ContentControl Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Content, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>
            </md:DrawerHost>
        </md:DialogHost>

        <Border Background="#99000000" Visibility="{Binding Source={StaticResource history}, Path=IsLoaded, Converter={StaticResource ReverseBooleanToVisibilityConverter}}">
            <md:ColorZone Mode="Light" Padding="16" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" IsIndeterminate="True" VerticalAlignment="Center"/>
                    <TextBlock Text="Connecting..." VerticalAlignment="Center" Margin="8"/>
                </StackPanel>
            </md:ColorZone>
        </Border>
    </Grid>
</Window>
